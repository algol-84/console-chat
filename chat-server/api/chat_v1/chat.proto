syntax = "proto3";

package chat_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/algol-84/chat-server/pkg/chat_v1;chat_v1";

// Swagger документация генерируется только для HTTP ручек
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat API"
    version: "1.0.0"
    contact: {
      name: "algol"
      email: "example@mail"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service ChatV1 {
  rpc CreateChat(google.protobuf.Empty) returns (CreateChatResponse) {
    // В опциях описываем метод http
    option (google.api.http) = {
      // указаваем метод http и путь до ручки
      post: "/chat/v1"
      // "*" все что приходит - это боди
      body: "*"
    };  
  }
  rpc DeleteChat(DeleteChatRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/chat/v1"
    };
  }
  rpc ConnectChat (ConnectChatRequest) returns (stream Message) {
    option (google.api.http) = {
      post: "/chat/v1/connect"
      body: "*"
    };
  }
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/chat/v1/send-message"
      body: "*"
    };
  }
}

message Message {
  string from = 1;
  string text = 2;
  google.protobuf.Timestamp created_at = 3;
}

message CreateChatResponse {
  string id = 1;
}

message DeleteChatRequest {
  string id = 1;
}

message ConnectChatRequest {
  string chat_id = 1;
  string username = 2 [(validate.rules).string.min_len = 1, (validate.rules).string.max_len = 25];
}

message SendMessageRequest {
  string chat_id = 1;
  Message message = 2;
}